package com.emerlet.db;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.Statement;

public class Init {
	
	public static void init() {
		createUser();
		grant();
		createTable();
		insertData();
	}
	
	public static void createUser() {
		try {
			Connection conn = ConnectionProvider.getConnection("system", "manager");			
			String sql ="create user c##toilet identified by toilet;";
			Statement stmt = conn.createStatement();
			stmt.execute(sql);
			ConnectionProvider.close(conn, stmt);
		}catch (Exception e) {
			System.out.println("예외발생:"+e.getMessage());
		}
	}
	
	public static void grant() {
		try {
			Connection conn = ConnectionProvider.getConnection("system", "manager");			
			String sql ="grant connect, resource, dba to c##toilet";
			PreparedStatement pstmt = conn.prepareStatement(sql);	
			pstmt.executeUpdate();
			ConnectionProvider.close(conn, pstmt);
		}catch (Exception e) {
			System.out.println("예외발생:"+e.getMessage());
		}
	}
	
	public static void createTable() {
		String[] sqlStatements = {
				// user_toilets 테이블과 시퀀스
				"CREATE TABLE user_toilets (\n" +
				"    user_toilet_id NUMBER PRIMARY KEY,\n" +
				"    user_name VARCHAR2(100) NOT NULL,\n" +
				"    user_road_address VARCHAR2(255) NOT NULL,\n" +
				"    user_male_toilet CHAR(1),\n" +
				"    user_female_toilet CHAR(1),\n" +
				"    user_male_disabled_toilet CHAR(1),\n" +
				"    user_female_disabled_toilet CHAR(1),\n" +
				"    user_has_diaper_table CHAR(1),\n" +
				"    user_has_emergency_bell CHAR(1),\n" +
				"    user_has_cctv CHAR(1),\n" +
				"    user_description VARCHAR2(500),\n" +
				"    user_lat NUMBER(9,6),\n" +
				"    user_lng NUMBER(9,6),\n" +
				"    submitted_at DATE NOT NULL,\n" +
				"    status VARCHAR2(20) NOT NULL,\n" +  // ✔️ 여기 수정됨
				"    photo_url VARCHAR2(255),\n" +
				"    CONSTRAINT chk_status CHECK (status IN ('pending', 'approved', 'rejected'))\n" +
				")",


				"CREATE SEQUENCE user_toilet_id_seq START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE",

				// reviews 테이블
				"CREATE TABLE reviews (\n" +
				"    review_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,\n" +
				"    cleanliness NUMBER,\n" +
				"    safety NUMBER,\n" +
				"    created_at DATE,\n" +
				"    user_toilet_id NUMBER REFERENCES user_toilets(user_toilet_id),\n" +
				"    toilet_id NUMBER REFERENCES toilets(toilet_id)\n" +
				")",

				// unified_toilet_reports 테이블과 시퀀스
				"CREATE TABLE unified_toilet_reports (\n" +
				"  report_id NUMBER PRIMARY KEY,\n" +
				"  toilet_type VARCHAR2(10),\n" +
				"  toilet_ref_id NUMBER,\n" +
				"  report_male CHAR(1),\n" +
				"  report_female CHAR(1),\n" +
				"  report_male_disabled CHAR(1),\n" +
				"  report_female_disabled CHAR(1),\n" +
				"  report_diaper CHAR(1),\n" +
				"  report_cctv CHAR(1),\n" +
				"  report_bell CHAR(1),\n" +
				"  report_description VARCHAR2(500),\n" +
				"  report_status CHAR(1),\n" +
				"  reported_at DATE DEFAULT SYSDATE\n" +
				")",

				"CREATE SEQUENCE unified_toilet_reports_seq START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE"
	        };
			
			try {
				Connection conn = ConnectionProvider.getConnection("c##bit", "bit");
	            Statement stmt = conn.createStatement();

	            for (String sql : sqlStatements) {	                
	                 stmt.executeUpdate(sql);
	                 System.out.println("Executed: " + sql);
	            }
	            ConnectionProvider.close(conn, stmt);
			}catch (Exception e) {
				System.out.println("예외발생:"+e.getMessage());
			}
	    }
	
	
	
	public static void insertData() {
	   
	    String[] insertStatements = {
	        // customer 샘플 데이터
	        "INSERT INTO customer (cno, cname, c_jumin, c_addr, c_phone, c_email, c_type) VALUES (1, '홍길동', '9001011234567', '서울시 강남구', '010-1111-1111', 'hong@example.com', '일반')",
	        "INSERT INTO customer (cno, cname, c_jumin, c_addr, c_phone, c_email, c_type) VALUES (2, '김철수', '8505052345678', '부산시 해운대구', '010-2222-2222', 'kim@example.com', 'VIP')",
	        "INSERT INTO customer (cno, cname, c_jumin, c_addr, c_phone, c_email, c_type) VALUES (3, '이영희', '9203033456789', '대구시 수성구', '010-3333-3333', 'lee@example.com', '일반')",

	        // dept 샘플 데이터
	        "INSERT INTO dept (dno, dname, dloc, d_tel) VALUES (10, '프론트팀', '서울', '02-100-1000')",
	        "INSERT INTO dept (dno, dname, dloc, d_tel) VALUES (20, '백엔드팀', '부산', '051-200-2000')",
	        "INSERT INTO dept (dno, dname, dloc, d_tel) VALUES (30, '인사팀', '대구', '053-300-3000')",

	        // emp 샘플 데이터
	        "INSERT INTO emp (eno, ename, e_jumin, e_phone, e_addr, hiredate, id, pwd, salary, dno) VALUES (100, '박영수', '8001011234567', '010-4444-4444', '서울 강서구', '2020-01-01', 'parkys', '1234', 4000, 10)",
	        "INSERT INTO emp (eno, ename, e_jumin, e_phone, e_addr, hiredate, id, pwd, salary, dno) VALUES (101, '최진수', '8102022345678', '010-5555-5555', '인천 연수구', '2019-03-15', 'choijs', 'abcd', 4500, 20)",
	        "INSERT INTO emp (eno, ename, e_jumin, e_phone, e_addr, hiredate, id, pwd, salary, dno) VALUES (102, '정미나', '8505053456789', '010-6666-6666', '광주 북구', '2021-07-10', 'jungmn', 'pass', 4200, 30)",

	        // room 샘플 데이터
	        "INSERT INTO room (room_no, room_type, price) VALUES (1, '싱글', 50000)",
	        "INSERT INTO room (room_no, room_type, price) VALUES (2, '더블', 70000)",
	        "INSERT INTO room (room_no, room_type, price) VALUES (3, '스위트', 150000)"
	    };

	    try {
	    	 Connection conn = ConnectionProvider.getConnection("c##bit", "bit");
	         Statement stmt = conn.createStatement();
	         for (String sql : insertStatements) {	            
	                stmt.executeUpdate(sql);
	                System.out.println("Inserted: " + sql);
	         }
	         ConnectionProvider.close(conn, stmt);
	    } catch (Exception e) {
	    	System.out.println("예외발생:"+e.getMessage());
	    }
	}
}






